---
title: "eda"
format: html
editor: visual
---

## Statement

The research question asks if the method of exoplanet discovery is correlated with the parameters present in the current exoplanet population. The method used to answer this question will mainly be clustering. From the dataset, the majority of the variables were removed such as discovery date were removed as they were not relevant to the project. What was left was the name, discovery method, radius, and exoplanet parameters.

## Description

The exoplanet parameters that will be tested will be the equilibrium temperature, orbital period, mass, orbital eccentricity, and orbital semi-major axis. These are the main variables that determine what type of planet the exoplanet is, i.e. gas giant. The discovery method is also a key part of this project. The different discovery methods are Astrometry, Eclipse Timing Variations, Imaging, Microlensing, and Transit. These different methods will each be correlated with different exoplanet variables. Through this, we can see if certain discovery methods favor certain parameters in exoplanets.

## EDA

Univariate Analysis

```{r}
library(ggplot2)
summary(planetdata_cleaned$discoverymethod)
ggplot(planetdata_cleaned, aes(x=discoverymethod))+geom_bar()+theme(axis.text = element_text(size=6))
```

The visualization above shows the distribution of which discovery methods are more prevalent. As shown, transit and radial velocity make up the vast majority of exoplanet discoveries.

Bivariate Analysis

```{r}
library(ggplot2)
ggplot(planetdata_cleaned_transit, aes(x=discoverymethod, y =pl_orbper))+geom_point()+labs(x = "Transit", y = "Orbital Period")
```

The above visualization shows the relation between planets discovered through transit and their orbital period. The majority of planets are between 0 and 1500 days with only one outlier at over 3500 days.

Multivariate Analysis

```{r}
library(ggplot2)
set.seed(123)
data_numeric <- planetdata_cleaner[, sapply(planetdata_cleaner, is.numeric)]
planetdata_cleanest <- data_numeric[complete.cases(data_numeric) & apply(data_numeric, 1, function(x) all(is.finite(x))), ]
kcluster <- kmeans(planetdata_cleanest, centers = 2)
planetdata_cleanest$cluster <- factor(kcluster$cluster)
ggplot(planetdata_cleanest, aes(x = pl_massj, y=pl_rade, color-cluster))+geom_point()
```

The `echo: false` option disables the printing of code (only output is displayed).
